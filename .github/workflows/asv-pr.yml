name: ASV Benchmarking (PR)

permissions:
  issues: write
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]
  workflow_dispatch:

env:
  PR_HEAD_LABEL: ${{ github.event.pull_request.head.label }}

jobs:
  benchmark:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'run-benchmark') && github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
    name: Linux
    runs-on: ubuntu-latest
    env:
      ASV_DIR: "./benchmarks"
      CONDA_ENV_FILE: ci/environment.yml

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: fetch repo name
        id: repo-name
        run: echo "value=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_OUTPUT  # just the repo name, not owner

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3
        with:
          miniforge-version: "24.1.2-0"
          activate-environment: asv-bench

      - name: Get date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: set message
        run: |
          echo "comment_message=Meowdy! Here's your benchmark comparison:" >> $GITHUB_ENV

      - name: Find preview comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: '${{ github.event.number }}'
          comment-author: 'github-actions[bot]'
          body-includes: '${{ env.comment_message }}'

      - name: Create preview comment
        if: steps.fc.outputs.comment-id == ''
        id: create-comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: '${{ github.event.number }}'
          body: |
            ${{ env.comment_message }}
            🔍 Git commit SHA: ${{ github.sha }}
            ✅ Benchmark Comparison: In Progress

      - name: Debug
        run: |
          echo "${{ steps.fc.outputs.comment-id }}"

      - name: Cache environment
        uses: actions/cache@v4
        with:
          path: ${{ env.CONDA }}/envs
          key:
            conda-${{ runner.os }}--${{ runner.arch }}--${{
            steps.get-date.outputs.today }}-${{
            hashFiles('./build_envs/asv-bench.yml') }}-${{ env.CACHE_NUMBER}}
        env:
          # Increase this value to reset cache if the environment file has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run:
          conda env update -n asv-bench -f
          ./build_envs/asv-bench.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run Benchmarks
        shell: bash -l {0}
        id: benchmark
        run: |
          set -x
          # ID this runner
          asv machine --yes
          echo "Baseline:  ${{ github.event.pull_request.base.sha }} (${{ github.event.pull_request.base.label }})"
          echo "Contender: ${GITHUB_SHA} ($PR_HEAD_LABEL)"
          # Run benchmarks for current commit against base
          ASV_OPTIONS="--split --show-stderr"
          asv continuous $ASV_OPTIONS ${{ github.event.pull_request.base.sha }} ${GITHUB_SHA}
          # Save compare results
          asv compare --split ${{ github.event.pull_request.base.sha }} ${GITHUB_SHA} > asv_compare_results.txt
        working-directory: ${{ env.ASV_DIR }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: asv-benchmark-results-${{ runner.os }}
          path: |
            ${{ env.ASV_DIR }}/results
            ${{ env.ASV_DIR }}/asv_compare_results.txt

      - name: Update preview comment
        if: |
          steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ${{ env.comment_message }}
            Baseline:  ${{ github.event.pull_request.base.sha }} (${{ github.event.pull_request.base.label }})
            Contender: ${GITHUB_SHA} ($PR_HEAD_LABEL)

      - name: Post or update result comment
        id: comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const compareResults = fs.readFileSync('${{ env.ASV_DIR }}/asv_compare_results.txt', 'utf8');
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;

            // Customize the comment content with your action results
            const newComment = `
            ## ASV Benchmarking

            <details>
              <summary>Benchmark Comparison Results</summary>

              ${compareResults}
            </details>
            `;

            // Fetch existing comments on the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number,
            });

            // Find if there is an existing comment by this action
            const botComment = comments.find(comment => comment.user.login === 'github-actions[bot]');

            if (botComment) {
              // Update the existing comment
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: botComment.id,
                body: newComment,
              });
            } else {
              // Create a new comment
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: newComment,
              });
            }
