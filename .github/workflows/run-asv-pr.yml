name: ASV PR Comparison

# read-only repo token
on:
  pull_request:
      types: [opened, reopened, synchronize, labeled]
  workflow_dispatch:

env:
  PR_HEAD_LABEL: ${{ github.event.pull_request.head.label }}

jobs:
  benchmark:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'run-benchmark') && github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
    name: Linux
    runs-on: ubuntu-latest
    env:
      ASV_DIR: "./benchmarks"
      CONDA_ENV_FILE: ci/environment.yml

    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 #v4.3.0
        with:
          fetch-depth: 0

      - name: fetch repo name
        id: repo-name
        run: echo "value=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_OUTPUT  # just the repo name, not owner

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3
        with:
          miniforge-version: "24.1.2-0"
          activate-environment: asv-bench

      - name: Get date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_ENV
        shell: bash

      - name: set message
        run: |
          echo "comment_message=Meowdy! Here's your benchmark comparison:" >> $GITHUB_ENV

      - name: Cache environment
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  #v4.2.4
        with:
          path: ${{ env.CONDA }}/envs
          key:
            conda-${{ runner.os }}--${{ runner.arch }}--${{ env.today }}-
              ${{ hashFiles('./build_envs/asv-bench.yml') }}-${{ env.CACHE_NUMBER}}
        env:
          # Increase this value to reset cache if the environment file has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        if: steps.cache.outputs.cache-hit != 'true'
        run:
          conda env update -n asv-bench -f
          ./build_envs/asv-bench.yml

      - name: Run Benchmarks
        shell: bash -l {0}
        id: benchmark
        run: |
          set -x
          # ID this runner
          asv machine --yes
          echo "Baseline:  ${{ github.event.pull_request.base.sha }} (${{ github.event.pull_request.base.label }})"
          echo "Contender: ${GITHUB_SHA} ($PR_HEAD_LABEL)"
          # Run benchmarks for current commit against base
          ASV_OPTIONS="--split --show-stderr"
          asv continuous $ASV_OPTIONS ${{ github.event.pull_request.base.sha }} ${GITHUB_SHA}
          # Save compare results
          echo "${{ env.comment_message }}" > asv_compare_results.txt
          echo "Baseline:  ${{ github.event.pull_request.base.sha }} (${{ github.event.pull_request.base.label }})" >> asv_compare_results.txt
          echo "Contender: ${GITHUB_SHA} ($PR_HEAD_LABEL)" >> asv_compare_results.txt
          asv compare --split ${{ github.event.pull_request.base.sha }} ${GITHUB_SHA} >> asv_compare_results.txt

        working-directory: ${{ env.ASV_DIR }}

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  #v4.6.2
        if: always()
        with:
          name: benchmark-results
          path: |
            ${{ env.ASV_DIR }}/results
            ${{ env.ASV_DIR }}/asv_compare_results.txt

      - name: Save PR number
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  #v4.6.2
        with:
          name: pr
          path: pr/
